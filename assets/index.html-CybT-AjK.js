import{_ as s,c as a,a as i,o as n}from"./app-B-YceFtn.js";const t={};function r(l,e){return n(),a("div",null,e[0]||(e[0]=[i(`<h2 id="_175-组合两个表" tabindex="-1"><a class="header-anchor" href="#_175-组合两个表"><span><a href="https://leetcode.cn/problems/combine-two-tables/" target="_blank" rel="noopener noreferrer">175. 组合两个表</a></span></a></h2><div class="language-mysql line-numbers-mode" data-highlighter="shiki" data-ext="mysql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>-- 组合两个表</span></span>
<span class="line"><span># 左连接以左表为基础，将右表中满足连接条件的记录与左表进行匹配，并保留左表中所有的记录，无论右表中是否有匹配</span></span>
<span class="line"><span># 如果右表中没有与左表匹配的记录，则在结果中对应的右表列显示为 NULL</span></span>
<span class="line"><span>select FirstName, LastName, City, State</span></span>
<span class="line"><span>from Person left join Address </span></span>
<span class="line"><span>on Person.PersonId = Address.PersonId;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_176-第二高的薪水" tabindex="-1"><a class="header-anchor" href="#_176-第二高的薪水"><span><a href="https://leetcode.cn/problems/second-highest-salary/" target="_blank" rel="noopener noreferrer">176. 第二高的薪水</a></span></a></h2><div class="language-mysql line-numbers-mode" data-highlighter="shiki" data-ext="mysql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>-- 第二高的薪水</span></span>
<span class="line"><span>select max(salary) as SecondHighestSalary # 将排去所有最大值剩下的数种选择新的最大值</span></span>
<span class="line"><span>from Employee</span></span>
<span class="line"><span>where salary &lt; (select max(salary) from Employee) # 先查询出表中最大的那个值, 筛选出比该值小的所有数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1068-产品销售分析-i" tabindex="-1"><a class="header-anchor" href="#_1068-产品销售分析-i"><span><a href="https://leetcode.cn/problems/product-sales-analysis-i/" target="_blank" rel="noopener noreferrer">1068. 产品销售分析 I</a></span></a></h2><div class="language-mysql line-numbers-mode" data-highlighter="shiki" data-ext="mysql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>-- 产品销售分析 I</span></span>
<span class="line"><span>select product_name, year, price from Sales join Product using(product_id);</span></span>
<span class="line"><span># 或者使用 select product_name, year, price from Sales, Product where Sales.product_id=Product.product_id; 也是一样的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const o=s(t,[["render",r]]),c=JSON.parse('{"path":"/1.%E7%BC%96%E7%A0%81%E4%BF%AE%E5%85%BB/4.%E6%8C%81%E4%B9%85%E5%AD%98%E5%82%A8/mysql/miy70g21/","title":"MySQL 实践题目","lang":"zh-CN","frontmatter":{"createTime":"2025/08/06 05:43:51","permalink":"/1.编码修养/4.持久存储/mysql/miy70g21/","title":"MySQL 实践题目","description":"175. 组合两个表 176. 第二高的薪水 1068. 产品销售分析 I","head":[["meta",{"property":"og:url","content":"https://limou3434.github.io/work-blog-website/work-blog-website/1.%E7%BC%96%E7%A0%81%E4%BF%AE%E5%85%BB/4.%E6%8C%81%E4%B9%85%E5%AD%98%E5%82%A8/mysql/miy70g21/"}],["meta",{"property":"og:site_name","content":"缡墨"}],["meta",{"property":"og:title","content":"MySQL 实践题目"}],["meta",{"property":"og:description","content":"175. 组合两个表 176. 第二高的薪水 1068. 产品销售分析 I"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-13T09:33:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-13T09:33:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 实践题目\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-13T09:33:14.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.85,"words":256},"git":{"updatedTime":1749807194000,"contributors":[{"name":"limou3434","username":"limou3434","email":"898738804@qq.com","commits":7,"avatar":"https://avatars.githubusercontent.com/limou3434?v=4","url":"https://github.com/limou3434"}]},"autoDesc":true,"filePathRelative":"notes/1.编码修养/4.持久存储/mysql/014_limou_2024_04_15_mysql_实践操作2.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"557f7c","sort":1,"name":"编码修养"},{"id":"8ba8e4","sort":4,"name":"持久存储"},{"id":"56b8cc","sort":10001,"name":"mysql"}],"bulletin":true}');export{o as comp,c as data};
