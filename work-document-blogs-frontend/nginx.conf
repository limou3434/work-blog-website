# nginx.conf
# @author <a href="https://github.com/xiaogithubooo">limou3434</a>
# @from <a href="https://datalearnhub.com">大数据工作室</a>

server {
    listen 80;
    index index.html index.htm default.htm default.html;
    root /usr/share/nginx/html;

    # >>> begin-2025-01-11-ljp: 临时解决跨域问题(可能后期有后端时需要修改) >>>
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    # <<< end-2025-01-11-ljp: 临时解决跨域问题(可能后期有后端时需要修改) <<<

    # >>> begin-2025-01-11-ljp: 解决无法识别部分脚本文件的 bug >>>
    location ~* \.js$ {
        add_header Content-Type application/javascript;
    }
    # <<< end-2025-01-11-ljp: 解决无法识别部分脚本文件的 bug <<<

    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE)
    {
        return 404;
    }

    location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$
    {
        expires      30d;
        error_log /dev/null;
        access_log /dev/null;
    }

    location ~ .*\\.(js|css)?$
    {
        expires      12h;
        error_log /dev/null;
        access_log /dev/null;
    }

    # >>> begin-2024-06-22-ljp: 解决单页应用路由刷新 404 问题 >>>
    location / { # 该块匹配所有的请求
      try_files $uri $uri/ @rewrites; # 尝试顺序查找文件和目录, 如果都失败则定义重写规则
      index index.html;
      # >>> begin-2024-06-23-ljp: 解决 Nginx 无法同意 POST 请求的问题 >>>
      error_page 405 =200  $request_uri;
      # <<< end-2024-06-23-ljp: 解决 Nginx 无法同意 POST 请求的问题 <<<
    }

    location @rewrites {
      rewrite ^.*$ /index.html last; # 对正则模式 ^.*$ 进行匹配(匹配任意长度的字符串), 这一句就是重写规则, 把所有的请求重定向到 index.html 中(故就交给入口文件来处理), 这里的 last 是重写规则的选项之一, 主要作用是一旦完成重写规则, 就停止当前 location 中的请求处理, 把请求传递给下一阶段匹配的 location 块中...
    }

    access_log  /log/work-document-blogs-frontend.log;
    error_log  /log/work-document-blogs-frontend.error.log;
    # <<< end-2024-06-22-ljp: 解决单页应用路由刷新 404 问题 <<<
}
